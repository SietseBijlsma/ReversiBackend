@using Microsoft.AspNetCore.Identity
@using System.Security.Claims
@model IEnumerable<ReversiMvcApp.Models.Player>
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Index";
}
@{
    var currentUser = await UserManager.FindByIdAsync(User.FindFirst(ClaimTypes.NameIdentifier).Value);
    var currentUserRoles = await UserManager.GetRolesAsync(currentUser);
}

<h1>User Management</h1>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            var user = await UserManager.FindByIdAsync(item.Guid);
            var roles = await UserManager.GetRolesAsync(user);

            @if (user.Id == currentUser.Id)
            {
                continue;
            }

            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @if (currentUserRoles.Contains("Admin"))
                    {
                        @Html.ActionLink("Edit", "Edit", new { guid = item.Guid })
                        @Html.Raw(" |")
                    }
                    else
                    {
                        @Html.ActionLink("View", "View", new { guid = item.Guid })
                        @Html.Raw(" |")
                    }

                    @Html.ActionLink("Ban", "Ban", new { guid = item.Guid })

                    @if (currentUserRoles.Contains("Admin"))
                    {

                        @if (roles.Contains("User") && !roles.Contains("Mediator"))
                        {
                            @Html.Raw("| ")
                            @Html.ActionLink("Promote", "Promote", new { guid = item.Guid })
                        }
                        @if (roles.Contains("Mediator"))
                        {
                            @Html.Raw("| ")
                            @Html.ActionLink("Demote", "Demote", new { guid = item.Guid })
                        }
                    }
                </td>
            </tr>
        }
    </tbody>
</table>